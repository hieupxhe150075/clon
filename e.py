#Coded By SidraELEzz
#Tele : @TT_RQ
#وقل ربي زدني علما #
import base64
exec(base64.b64decode("#Compile By ARIS STYA CHANNEL
#TIM JANDA
import base64
exec(base64.b64decode("I0NvbXBpbGUgQnkgQVJJUyBTVFlBIENIQU5ORUwKI1RJTSBKQU5EQQppbXBvcnQgYmFzZTY0CmV4ZWMoYmFzZTY0LmI2NGRlY29kZSgiSTBOdmJYQnBiR1VnUW5rZ1FWSkpVeUJUVkZsQklFTklRVTVPUlV3S0kxUkpUU0JLUVU1RVFRcHBiWEJ2Y25RZ1ltRnpaVFkwQ21WNFpXTW9ZbUZ6WlRZMExtSTJOR1JsWTI5a1pTZ2lTWGxDUkdJeVVteGFRMEpwWlZOQ1JXUlhlRTFaVjJkblMwZGFhVXh0TVd4TU1sSXhZa2RHYjJWcGEyZE1VekJMU1hsQ1UxcFhUblphUjFWblVXNXJaMU5YZEhsWlV6QjRUMEZ2UzJGWE1YZGlNMG93U1VjNWVreERRbmxhVTNkblkyMVdlR1JYVm5wa1NFMXpTVWRPZG1KdFRqRmpia3BzWW01UmRWcHVWakJrV0Vwc1kzZHdiV050T1hSSlNFcG9ZbTFTZG1KVFFuQmlXRUoyWTI1UloyTnRSblZhUjJ4MVpFRnZTMkZYTVhkaU0wb3dTVWM1ZWt4RFFucGxXRTFMVkZOQk9VbERaR05OUkUxNlYzcEZOMDE2VG5SS2QzQkVTVVF3WjBveGQzZE5lazVpVFZSemVrMVhNRzVEYTFGblVGTkJibGhFUVhwTk1YTjRUM3BOZVdKVFkwdERiVkpzV21sQ00xbFRaM0JQWjI5blNVTkJaMkl6VFhWak0yeDZaRWRXZEV0RFpEUmFSMk4wWWpOQ2JHSnBRbTlrU0ZKM1kzcHZka3d6WkROa2VUVnRXVmRPYkZsdE9YWmhlVFZxWWpJd2RrMVVSVFJPUkZsNVRYcFZNazlFV1hkTmFsRXlTbmxyUzBObmNHdGFWMWxuWTIxV2VtUkhSbmxrUTJkd1QyZHZaMGxEUVdkaWJXUXhZa2RHZFZwNVFUbEpTRTQxWTNrMWJHVkhWbXBrV0ZKb1dXMTRiRU5wUVdkSlEwSjJZM2sxYkdWSFZtcGlRMmgxV2pOV2MxbFhOVzVNUTBKMVdqTldjMWxYTlc1TVEwRnhZek5zZWt4dFJubGFNMWx3UTIwNWVreHVUalZqTTFKc1lsTm5ibGt5ZUd4WldFbHVTMU5CWjBsRFFVdGpTRXB3WW01UmIxSkRhMHREYlRsNlRHNU9OV016VW14aVUyZHVXbTFzYm1KSFZqQkpRMHBVWVZkU2VWbFhWbk5hV0hBMlNXbGpjRU5uY0hkamJXeDFaRU5uWjBscFNXbEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaME5zZDNkTmVrNWlUVlJ6TlU1dE1XSkxNVEJuVmtjNWRsUkRRa05sVTBKVVlWZFNlVmxUUWtaVVJWWTJaV2R3WTAxRVRYcFhla1UzVDFSYWRGZDVkR1JKUjJ4VVNVWlNkbUl3ZDJkU2JrcHNXbE5CUzFoRVFYcE5NWE40VDNwck1tSldjM0pZVTBKVllqSTVUVWxGVG5sWlYwNXlTVVZhYUZreVZtbGlNamx5U1VWc2VWbFlSbGROZVVGTFNXbEphVXRSYjB0alNFcHdZbTVSYjFGNWEwdERia0o1WVZjMU1FdERZMmRKUTBGblNVTkJaMGxEUVdkSlJIYzVVRlF3T1ZCVU1EbFFWREE1VUZRd09WQlVNRGxRVkRBNVVGUXdPVkJVTkdkSlEwRm5TVU5CWjBsRFFXNUxVWEF4WXpKV2VVbEVNR2RoVnpWM1pGaFJiMG94ZDNkTmVrNWlUVlJ6TlU1dE1XSkxNVEZqWlVSR2FWZDZSVGRQVkdSMFZsaE9iR05yTldoaVYxVm5XRWhuZUZsc2MzaFBlbXN5WWxRd1owcDVhMHRoVnpGM1lqTktNRWxIWkd4a1NFSm9Zek5OUzJNeVJuVmFSMnRuVUZOQ2NHSnVRakZrUTJkdVdFUkJlazB4YzNoUGVtc3lZbFp6Y2xoV2VEUk5WMHBpVFZSek5VNHlNVkZSVms1VVZqQTVVMUpEUW1ObFJFWnBWM3BGTjA5VVduUlFVMEZ1UzFGd2NGcHBRbnBaVnpWcllWTkJPVkJUUVc1VFdFcG9ZMWhaZWtwNVFtaGliVkZuWkZoT2JHTnBRVGxRVTBGdVUxaEthR05ZV1hwS2VtOUxTVU5CWjBsSVFubGhWelV3UzBOQmJsRlhOV3RaVTBKVldsZDRhR0ZEUWsxaU1tUndZbWxqY0VOcFFXZEpRMEo2WlZoTmRWcFlhSEJrUVhCc1lraE9iRTluYjJkSlEwRm5ZMGhLY0dKdVVXOUpRMlJOWWpKa2NHSnBRa2hSVldSQ1ZFTjNaMVV5YkhOWlYyaHlXVmMwWjJGSVZtbGtWelZ1WVZOQ1FsSkZNVXBVYVdOd1EybEJaMGxEUWpOWlUyZHdRMmxCWjBsRFFubGFXRTR3V1ZoS01FdERhMHRpTTAxMVl6TnNlbVJIVm5STFEyUnFZa2RXYUdOcFkzQkRaM0J6WVZkSloxQlRRbkJpYmtJeFpFTm5hVWxwU21OTlJFMTZWM3ByZVdKUmIyZFlNVGxtV0hsQloxaDVRV2RKUTBGbldIbEJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEptUTJrNFoxZ3hPV1ptUTJobVMxTkNabGd6ZDJkbVJqaG5XREU0WjFneE9HZFllVUZuV0RFNVptWkRRamhKUmpsbVdIbENabGd4T1daWU1UbG1XSGR3WTFneE9XWkpSbmc0U1VoM2RrbEdPV2RKU0hkblNqRTVaa3g1UW1aWlEwSTRUSGxDWmtsR2QyZG1RemhuV0hsQ1kxaDVRV2RNTVRoblNVTTRaMGxEUVdkSlEwSm1XREU0Y0VsSWQyZG1RMEZ2V0ROM1oyWkRRamhKU0hkblMwWTVPRWxJZDJkSlJqbG1USGxDT0VsRFFtWlllVGgyU1VNNFoweDVRWFpEYm5obVdERTVaa3d6ZUdabVJuaG1XSGw0Wm1aR09UaEpRMEpqV0RFNGMxZ3plR05ZTVRsbVprWTVPRmhHT1daWWVUbG1XREU0ZGxneE9XWm1RVzlMV0VSQmVrMHhjM2hQZW10NllsWnpjbGhUUWxWaU1qbE5TVVZLTlVsR1RuQmFTRXBvU1VWV1RWSlljRFpEYkhkM1RYcE9ZazFVY3pWT2JURmlTekV3WjJGV1RXZFdSemwyVkVOQ1IyTnRWbXhKUVhCalRVUk5lbGQ2UlRkUFZGWjBWM2wwWkVsR1VuWmlNSGRuVVROS2FGa3ljMmRTYlVacVdsZEtkbUl5YzJkVFdFcG9ZMVpaZWtsQmIwdEpRMEpqVFVSTmVsZDZSVGRQVkU1MFNVTkJaMGxEUVdkSlEwRm5TVU5CWjFCRU1EbFFWREE1VUZRd09WQlVNRGxRVkRBNVVGUXdPVkJVTURsUVZEQTVVR2R3WTAxRVRYcFhla1UzVDFSS2RGZDZSbVJKUlZKMlpESTFjMkl5Um10SlIzaHdXV2xCYlVsSVZuZGFSMFl3V2xGd1kwMUVUWHBYZWtVM1QxUktkRmQ2U21SSlNFSm9Zek5OUzBOc2QzZE5lazVpVFZSek5VMVhNV0pMTVRCblZVZDRiRmxZVG14SlJVNXZZakpzYWxwVFFTdFFiSGQzVFhwT1lrMVVjelZOYlRCblNXbEphVXRSYjB0aFYxbG5Za2RzYVVsRU1EbEpRMGw0U1dwdlMwbERRV2RKUnpsNlRHNU9OV016VW14aVUyZHVZMGQwYmtsSVZuZFpWMUl3V2xOQmJVcHBRbmRoTW1OblpGaENibU50Um10YVUyTndRMmxCWjBsRFFuWmplVFY2WlZoT01GcFhNRzlLTTBKeVdubENjR0p1VGpCWlYzaHpTVWRhY0dNeVoyNUxVVzluU1VOQloySXpUWFZqTTJ4NlpFZFdkRXREWkhkaE1tTm5ZVmMxZW1SSFJuTmlRMEozWlZoU2IySXlOSGxLZVd0TFNVTkJaMGxIT1hwTWJrNDFZek5TYkdKVFoyNWpSM1J1U1Vkc2RXTXpVbWhpUjNkbldtMXNibUpIVmpCS2VXdExTVU5CWjBsSE9YcE1iazQxWXpOU2JHSlRaMjVqUjNSdVNVZHNkV016VW1oaVIzZG5aRWM1Y0dKSFZqQktlV3RMU1VOQlowbEhPWHBNYms0MVl6TlNiR0pUWjI1Wk1uaHNXVmhKYmt0UmIyZEpRMEZuWTBkR2VtTjNjR3hpU0U1c1QyZHZaMGxEUVdkaU0wMTFZek5zZW1SSFZuUkxRMlJxWWtkV2FHTnBZM0JEYVVGblNVTkNkMWxZVG5wRGJUbDZURzVPTldNelVteGlVMmR1V1RKNGJGbFlTVzVMVVhCcldsZFpaMWx1U2pGa1IxVnZaRmhPYkdOcGQyZGpSMFo2WXpOTmNFOW5iMmRKU0ZKNVpWUnZTMGxEUVdkSlIxcDJZMmxDZDJSNVFuQmlhVUozV1ZoT2VtTjZiMHRKUTBGblNVTkJaMk5IUm5sWlZ6RjZVRmh6UzBsRFFXZEpRMEZuU1VOQmJsbFhUbXBhV0U1NldETlNkbUV5Vm5WS2VtOW5TbnBOTVUxRVdUUk9WRlY2VFZSamVVOURWVE5SZWxsNVdtcG9hbHBVYkcxT2VsSnBUVlJLYlU5RVVtcE5WRWw2V1RKTmVVMTZVWHBPTWtVd1dWUk5lVXA1ZDB0SlEwRm5TVU5CWjBsRFFXNWFiVGw1WWxkR01FcDZiMmRLTUhCVVZEQTBia3hCYjJkSlEwRm5TVU5CWjBsRFpIcGFSM1JtWkcxV2VXTXliSFppYVdNMlNVTmplVXA1ZDB0SlEwRm5TVU5CWjBsRFFXNWFWekZvWVZkM2JrOXBRakZqTWxaNVRFRnZaMGxEUVdkSlEwRm5TVU5rYzJJeVRtaGlSMVZ1VDJsQmJscFhOV1pXVmsxdVRFRnZaMGxEUVdkSlEwRm5TVU5rZDFsWVRucGtNamw1V2tOak5rbElRak5NUVc5blNVTkJaMGxEUVdkSlEyUjZXa2R6Yms5cFFXNWhWemw2U25sM1MwbERRV2RKUTBGblNVTkJibG95Vm5WYVdFcG9aRWRXWm1NeVZucGpNbXgyWW13NWFtSXlPWEpoVjFaNlNucHZaMHA2Ulc1TVFXOW5TVU5CWjBsRFFXZEpRMlI2WVZkamJrOXBRVzVOTWxreFRsUldiVTlVYkcxWmFsbDRXbTFPYTA0eVJtaE5SMDB3VGtkWk1VOUhXVEZOYWtwc1dtcFpia3hCYjJkSlEwRm5TVU5DT1VOcFFXZEpRMEZuU1VkR2QyRlVNRzVoU0ZJd1kwaE5Oa3g1T1dsTVYwWjNZVk0xYlZsWFRteFpiVGwyWVhrMWFtSXlNSFppVjFZd1lVYzVhMHd5UmpGa1IyZDFZa2M1Ym1GWE5HNURhVUZuU1VOQlowbElTbXhqTTBKMlltNU9iRkJZU214aldGWnNZek5TZWt4dFpHeGtRMmhvWTBkcmMwbElRbWhqYlVaMFkzb3hkMWxZU21oaVdFMXdRMmxCWjBsRFFXZEpSMnh0U1VoS2JFeHVUbXhaV0VwcVlVTm5ia3RGVmtKUlZVVndXRWhqY2twNWQyZGpNMUo1UzBoS2JHTXpRblppYms1c1RHNVNiR1ZJVVhCTFZHOUxTVU5CWjBsRFFXZEpRMEozWTIxc2RXUkRaMjVKUTBKaVZFVnNWMUpXTUdkS1dFMW5URlEwWjBwWVRXZEtlVlZ2WXpOU2VVdElWbnBhV0Vsd1RFTkNlbVJJU1c5alNHTndTMU5yUzBsRFFXZEpRMEZuU1VOQ2FXTnRWbWhoZDI5blNVTkJaMGxEUW14aVIyeHRTVU5rTTJRelkzVmFiVVpxV2xkS2RtSXljM1ZaTWpsMFNubENjR0pwUW5sYVdFNTNZakkxZWxwVE5YRmpNamwxUzBOc1lrb3lWbmxqYlRsNVdESXhlbHA1WkdSUFoyOW5TVU5CWjBsRFFXZEpTRUo1WVZjMU1FdERZMmRKUm5SRVUwVldURmhUUVd4amVVRjBVR2xCYkdONVFXNUtVMmg2WkVoSmIyUllUbXhqYVd0elNVaE9NR05wYUhka2VXdHdTMUZ2WjBsRFFXZEpRMEZuU1VkS2VWcFhSbkpEYVVGbldsaG9hbHBZUWpCUGFVSjNXVmhPZWtObmNHdGFWMWxuWTIxR2RWcEhPWFJZTWpVeFlsZEtiR051VFc5TFZHOUxTVU5DYTFsWVVtaEpSREJuVnpFd1MwbERRblpqZVRWNlpWaE9NRnBYTUc5S01rNXpZM2xqWjJGWFdXZGlNMDExWW0xR2RGcFRRVGxRVTBGdVltNVJia2xIVm5Oak1sVm5TakpPYzFwWFJubEtlV3RMU1VOQ2RtTjVOWHBsV0U0d1dsY3diMG95VG5OYVYwWjVTbmxyUzBsRFFuZGpiV3gxWkVOb1JVdFJiMmRKUnpsNlRHNU9OV016VW14aVUyZHVXbTFzYm1KSFZqQkpRMHBLVld0R1VrbHBZM0JEYVVGblkwaEtjR0p1VVc5S2VXTnVRMmxDWTAxNlRtSk5la1UzVFZjeFlrbEdVblppTUhkblVUTkthRmt5YzJkU2JVWnFXbGRLZG1JeWMyZFRXRXBvWTFaWmVrbERRbVJEWjNCalRVUk5lbGQ2UlRkUFZFNTBWM2wwWkVsRlRtOWlNamw2V2xOQ01HRkhWV2RpYmxaMFdXMVdlVmQ2Vm1STVEwSjJZWGxDUm1WSFJuUmpSM2hzVDJkd1kwMUVUWHBYZWtVM1QxUldkRmQ1ZEdSSlJHc3lUa1JqTVVOc2QzZE5lazVpVFZSek5VNVhNV0pMTVRCblQxUlpNRTU2WTB0WVJFRjZUVEZ6ZUU5NmF6RmlWbk55V0ZOQk5VNXFVVE5QUVc5blNVTmpia3A1YTB0SlEwSnlZakpTYkZCWVRqQmphV2h3WW01Q01XUkRaMjVZUkUxNlYzcE5lazk2Um5SU1Z6VXdXbGhKWjJSSGFHeEpTRTR3V1ZoS01HRlhOVzVKUnpVeFlsZEtiR05xYjJkS2VXdHdRMmxCWjFwWWFIQmtRMmR1V0VSTmVsZDZUVEpQZWtaMFNVWlNiMXBUUW5Wa1Z6RnBXbGhKWjJKWVZucGtRMEpwV2xOQk1VbEhVbkJhTW13d1kzbDNaMkp0T0dkaVIxWjZZM2xDYUdKdFVXZGliVGhuWWxjNWVWcFRORzVMVTBKd1dtbENjMXBYTkc5aE1qbHJXbE5yWjFCRFFURkpSMVp6WXpKVlowcDVZMHRKUTBKc1pVZHNNRXREWkdOTmVrNWlUWHBaTjAxWE1HZFdSMmhzU1VjMU1XSlhTbXhqYVVKMFpGaE9NRWxIU214SlJGVm5Xa2RzYm1GWVVucE1RMEoxWW5sQ2MxcFlUbnBKUjBaMVdrTkNkV0o1UW5SaU0wcHNUR2xqY0VsSGJHMUpSM2hzWW1sb2NtSXlVbXhMVTBFclNVUlZaMXBYZUhwYVUwRnVTbmR2WjBsSE9YcE1iazQxWXpOU2JHSlRaMjVaTW5oc1dWaEpia3RSYjJkSlJ6bDZURzVPTldNelVteGlVMmR1WkVjNWNHSkhWakJKUXpGdFNVZEtjRnA1UWxSaFYxSjVXVmRXYzFwWWNEWkpRekZIU1Vka2FHVlRZM0JEYVVGblkwaEtjR0p1VVc5SmFVbHBRMmxCWjFoRVFYcE5NWE40VDNwcmVtSlRRV2RKUTBGblNVTkJaMGxEUVdkSlJIYzVVRlF3T1ZCVU1EbFFWREE1VUZRd09WQlVNRGxRVkRBNVVGUXdPVkJVTkV0SlEwRkxTVU5DWTAxRVRYcFhla1UzVDFSS2RGZDVkR1JKUmxKMllqQjNaMUZ1YTJkVk1teHJZMjFGWjFKVmVFWmxibTlMU1VOQ1kwMUVUWHBYZWtVM1QxUktkRmQ1ZEdSSlIyeFVTVVpTZG1Jd2QyZFNia3BzV2xOQlMwbERRbU5OUkUxNlYzcEZOMDlVU25SWGVYUmtTVVpTZG1Jd2QyZFJNMHBvV1RKeloxSnRSbXBhVjBwMllqSnpaMU5ZU21oalZsbDZRMmxCWjBOcFFXZFlSRUY2VFRGemVFOTZhM3BpVTBGblNVTkJaMGxEUVdkSlEwRm5TVVIzT1ZCVU1EbFFWREE1VUZRd09WQlVNRGxRVkRBNVVGUXdPVkJVTURsUVZEUkxTVU5CYVVscFNYQkRhVUZuWWpOTmRXTXpiSHBrUjFaMFMwTmtORnBIWTNSaU0wSnNZbWxDYjJSSVVuZGplbTkyVEROUmRXSlhWWFpVZWtaUVZEQkpia3RSYjJkSlIzQjBZa1F4Y0dKdVVXOWhWelYzWkZoUmIwcDVZMjVEYVVGbldFUk5lbGQ2VFRKUGVrWjBVbGMxTUZwWVNXZGtSMmhzU1VjMU1XSlhTbXhqYVVFMlNVTmpia3A1YTNCRGFVRm5WekpTYUdSSFJYVlpXRUozV2xjMWEwdEljMjVrV0U1c1kybGpOa2xJVGpCamFXaHNTMU4zWjBvelFqTktlbkJpVFZSRmVVMXFUWHBPUkZFeFRsTjNlRTFxVFRCT1ZFVjVUWHBSTVV4RVJYaE5ha2w2VFhwUk1FNVVWVEpPYVhkNFRXcE5NRTVVVlRCTmVrbDRXRmd3Y0VsSFduWmphVUpzU1Vkc2RVbEdkSHBrU0VsdllUSTVhMXBUYTNKS2VXTjFZVzA1Y0dKcGFHSktlVlo2U25sVmIyTnRSblZhUjJ4MVpFTm5kMHhFYTNCTFUwSnRZak5KWjJGVFFuQmlhVUo1V1ZjMWJscFRaM2RNUkdkd1dGTnJaMXB0T1hsSlIxVm5ZVmMwWjJOdFJuVmFNbFZ2WVcweGMwdFdNV1JEYVVGblkwaEtjR0p1VVc5SmFVbHBRMmxCWjFoRVFYcE5NWE40VDNwcmVtSlRRV2RKUTBGblNVTkJaMGxEUVdkSlExbG5TbWxCYlVsRFdXZEthVUZ0U1VOWlowcHBRVzFKUTFsblNtbEJiVU5wUVdkSmFVbHBTMUZ2WjBsSVpIQmtSMmRuV1RJNWRWa3pWbmxqYlZaMVpFTTFiV1JZVWpGamJWWjZUR3hTYjJOdFZtaGFSa0oyWWpKNFJtVkhWbXBrV0ZKMlkybG9kRmxZYUdaa01qbDVZVEpXZVdONk1IcE5RMnRuV1ZoTloyUkhaelpEYVVGblNVTkNOMlJIWjNWak0xWnBZbGRzTUV0SFNubGtXRkpzVEVOQ01XTXlWbmxYZVdReFl6SldlVW94TUhOSlNGWjZXbGhLWWtvelFqTktNVEJ3VDJsQ01XTXlWbmxKUjFwMlkybENNV015Vm5sSlIyeDFTVWRTYUdSSFJqbERhVUZuWTBoS2NHSnVVVzlLTVhoMVNVTkNSV0l5Tld4UGFXdHVTMUZ2UzFwSFZtMUpTRXBvWW0xU2RtSldPV3hpVjBad1lrTm5jRTluYjJkSlJ6bDZURzVPTldNelVteGlVMmR1V1RKNGJGbFlTVzVMVVc5blNVYzVla3h1VGpWak0xSnNZbE5uYm1SSE9YQmlSMVl3U1VNeGJVbEhTbkJhZVVKVldsZDRiRm96U21oaVUwRjBVbWxDYmxsWWEyZG1RMEp6WWpKNGFsbFlVVzVMVVc5blNVYzVla3h1VGpWak0xSnNZbE5uYm1WSFVtNU1WemwzV2xjMFoyRklVakJqU0UwMlRIazVNRXh0TVd4TU1WSlZXREZLVWtwNWEwdEpRMEoyWTNrMWVtVllUakJhVnpCdlNqSk9jMXBYUm5sS2VXdExTVU5DZG1ONU5YcGxXRTR3V2xjd2Iwb3pVblpoVjNoc1pFTkJkRnBwUW1saFYyTm5WMWM1TVZaSVZtbGFVMEYwVW1sQ2JsbFlhMmRtUTBKellqSjRhbGxZVVc1TFVXOW5TVWM1ZWt4dVRqVmpNMUpzWWxObmJtVkhVbTVNVnpsM1dsYzBaMkZJVWpCalNFMDJUSGs1TldJelZqQmtWMHBzVEcxT2RtSlRPV3BoUjBaMVltMVdjMHd4VmtSbGExb3lZVlZhV2xFd09VdFRWRkpLWkRKb2ExWnJPVkpXU0VaS1pIbGpjRWxCYjB0YVIxWnRTVWhDY0dKSGJHOUxRMnMyUTJsQloyTklTbkJpYmxGdlVrTnJTME5wUVdkaU0wMTFZek5zZW1SSFZuUkxRMlJ0WVZka2MxcFlVV2RKYkU1d1draEthRnBYZUd4bGJtOXBTbmxyUzBsRFFuZGpiV3gxWkVObmFVbHBTVXRKUTBGNFRHbENZMDE2VG1KTmVrMDNUVmN4VldJeU9VMUpSVTU1V1ZkT2NrbEZXbWhaTWxacFlqSTVja2xGYkhsWldFWlhUWGxDWTAxNlRtSk5lbU0zVFZjd1MwbERRWGxNYVVKalRYcE9ZazE2VFRkTlZ6RkhZako0YzJJelkyZFZNbXhyWTIxRloxSlZlRVpsYm05TFNVTkJhVWxwU1hCRGFVRm5Zak5OZFdNemJIcGtSMVowUzBOa05GcEhZM1JpTTBKc1ltbENiMlJJVW5kamVtOTJURE5SZFdKWFZYWldSbEptVld4RmJrdFJiMmRKU0VKd1lrUXhjR0p1VVc5aFZ6VjNaRmhSYjBwNVFXZFJNbWgyWWpOT2JFbEZOVEZpVjBwc1kycHZaMHA1YTNCRGFVRm5ZVmRaWjJOSGJITkpSREE1U1VSRk5rTnBRV2RKUTBKNVdWYzFhMkl5TVdaaWJsWjBXVzFXZVdONVozQkRhVUZuV2xkNGNGcHBRbmRoVjNkblVGUXdaMDFxYjB0SlEwRm5TVWhLYUdKdFVuWmlWamxzWWxkR2NHSkRaM0JEYVVGbldsZDRlbHBVYjB0SlEwRm5TVWRXTkdGWVVXOUtlVUZuV2pJNWRscEhlREZaTW5OdVMxRnZTMk5IYkhOaFYyZHZTMU5DY0ZwcFFtWllNalZvWWxkV1psaDVRVGxRVTBGdVdERTVkRmxYYkhWWU1UaHVTVWRXYzJNeVZXZGFXR2h3WkVObmJsVXlPWGxqYm10elNVaE9kbUpYVmpCaFIyeDFXbmxDTTJOdE9YVmFlWGRuWTBkNGJGbFlUbXhKU0ZKNVpWTkNhRm95Um5CaWFVSnpXVmhTYkdOcE5HNUxVVzlMUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CUzBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxCYjJkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2REWjI5TElpa3AiKSk="))"))